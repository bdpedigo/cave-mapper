{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cave-mapper","text":""},{"location":"#cave-mapper","title":"cave-mapper","text":"<p>Tools for mapping between objects and representations in the Connectome Annotation and Versionining Engine (CAVE) ecosystem.</p> <p>This package is a work in progress and is mainly a place to stash functions that I find useful.</p>"},{"location":"api/","title":"caveclient.CAVEclient","text":""},{"location":"api/#cave_mapper.map_points","title":"<code>cave_mapper.map_points(points, root_id, client, initial_distance=0, max_distance=4, verbose=False)</code>","text":"<p>Map points in space to voxels and their corresponding supervoxels.</p> <p>Parameters:</p> Name Type Description Default <code>points</code> <code>ndarray</code> <p>Array of points in space to be mapped. Must be of shape (n_points, 3), and are assumed to be in coordinates of nanometers.</p> required <code>root_id</code> <code>int</code> <p>The root id of the object to map to.</p> required <code>client</code> <code>CAVEclient</code> <p>The CAVEclient object to use for mapping.</p> required <code>initial_distance</code> <code>int</code> <p>The initial distance to search for a mapping. Default is 0. Units are in voxels.</p> <code>0</code> <code>max_distance</code> <code>int</code> <p>The maximum distance to search for a mapping. Default is 4. Units are in voxels.</p> <code>4</code> <code>verbose</code> <p>Whether to print progress messages.</p> <code>False</code> <p>Returns:</p> Type Description <code>DataFrame</code> <p>A DataFrame containing the mapping information. The DataFrame will have the following columns:</p> <ul> <li><code>query_pt_x</code>, <code>query_pt_y</code>, <code>query_pt_z</code>: The original points in space.</li> <li><code>voxel_pt_x</code>, <code>voxel_pt_y</code>, <code>voxel_pt_z</code>: The corresponding voxel coordinates.     Units are the same as <code>client.chunkedgraph.base_resolution</code>.</li> <li><code>supervoxel_id</code>: The supervoxel id of the corresponding voxel.</li> <li><code>root_id</code>: The root id of the object.</li> <li><code>query_voxel_distance_nm</code>: The distance from the original point to the    closest voxel that is part of the object.</li> </ul>"},{"location":"api/#cave_mapper.map_points_via_mesh","title":"<code>cave_mapper.map_points_via_mesh(points, root_id, client, max_distance=4, verbose=False)</code>","text":"<p>Map points in space to a mesh and then to voxels and their corresponding supervoxels.</p> <p>Parameters:</p> Name Type Description Default <code>points</code> <code>ndarray</code> <p>Array of points in space to be mapped. Must be of shape (n_points, 3), and are assumed to be in coordinates of nanometers.</p> required <code>root_id</code> <code>int</code> <p>The root id of the object to map to.</p> required <code>client</code> <code>CAVEclient</code> <p>The CAVEclient object to use for mapping.</p> required <code>max_distance</code> <code>int</code> <p>The maximum distance to search for a mapping. Default is 4. Units are in voxels.</p> <code>4</code> <code>verbose</code> <p>Whether to print progress messages.</p> <code>False</code> <p>Returns:</p> Type Description <code>DataFrame</code> <p>A DataFrame containing the mapping information. The DataFrame will have the following columns:</p> <ul> <li><code>query_pt_x</code>, <code>query_pt_y</code>, <code>query_pt_z</code>: The original points in space.</li> <li><code>mesh_pt_x</code>, <code>mesh_pt_y</code>, <code>mesh_pt_z</code>: The closest points on the mesh.</li> <li><code>voxel_pt_x</code>, <code>voxel_pt_y</code>, <code>voxel_pt_z</code>: The corresponding voxel coordinates.     Units are the same as <code>client.chunkedgraph.base_resolution</code>.</li> <li><code>supervoxel_id</code>: The supervoxel id of the corresponding voxel.</li> <li><code>root_id</code>: The root id of the object.</li> <li><code>query_mesh_distance_nm</code>: The distance from the original point to the closest     point on the mesh.</li> <li><code>mesh_voxel_distance_nm</code>: The distance from the closest point on the mesh to     the corresponding voxel.</li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#install","title":"Install","text":"<pre><code>pip install cave-mapper\n</code></pre> <p>or, if using <code>uv</code>, do</p> <pre><code>uv pip install cave-mapper\n</code></pre> <p>or</p> <pre><code>uv add install cave-mapper\n</code></pre>"}]}